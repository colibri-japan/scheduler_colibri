if (typeof pathname === 'undefined') {
  let pathname
}
pathname = window.location.pathname;

<% if @appointment.errors.any? %>
  if (pathname.includes('payable')) {
    alert("<%= j @appointment.errors[:base].first %>")
  } else {
    $('#nurse-overlapping-days').text("<%= j @appointment.errors[:base].first %>");
    $('.modal').modal('hide');
    $('#nurse-overlap-modal').modal({ backdrop: 'static' })

    $('#nurse-overlap-modal').on('shown.bs.modal', function(){
      $('#nurse-overlap-override').off('click')
      $('#nurse-overlap-override').one('click', function(event){
        event.preventDefault()
        let appointment_ids = <%=  @appointment.errors[:overlapping_ids].flatten %>;
        let indexCount =  0;
        appointment_ids.forEach(function(appointment_id, index, array){
          let request_edit_url = '/plannings/' + <%= @appointment.planning_id %> + '/appointments/' + appointment_id + '/toggle_edit_requested';
          indexCount++;
          $.ajax({
            url: request_edit_url,
            type: 'PATCH',
            beforeSend: function (xhr) { xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content')) },
            success: function(data) {
              if (indexCount == appointment_ids.length) {
                let appointment_data;
                appointment_data = {
                  appointment: {
                    starts_at: "<%= @appointment.starts_at %>",
                    ends_at: "<%= @appointment.ends_at %>",
                    nurse_id: "<%= @appointment.nurse_id %>",
                    patient_id: "<%= @appointment.patient_id %>",
                    color: "<%= @appointment.color %>",
                    title: "<%= @appointment.title %>",
                    description: "<%= @appointment.description %>"
                  }
                };
                let appointment_url = '/plannings/' + <%= @appointment.planning_id %> + '/appointments/' + <%= @appointment.id %>;
                $.ajax({
                  url: appointment_url,
                  type: 'PATCH',
                  data: appointment_data
                })
              }
            }
          })
        })
      })
    });

  }

<% else %>
  $('.modal').modal('hide');
  $('.modal-backdrop').remove();
  if (pathname.includes('payable')) {
    <% if @appointment.cancelled && @appointment.saved_change_to_cancelled? && @corporation.detailed_cancellation_options %>
        $('#remote_container').html('<%= j render "appointments/cancellation_options" %>');
        $('#cancellation_options').modal({backdrop: 'static'});
        reloadWhenDismissedInPayable()
    <% else %>
      Turbolinks.reload()
    <% end %>
  } else {

    if (typeof renderEvent === 'undefined') {
      let renderEvent
    }
  
    renderEvent = (window.currentResourceType === 'team') || (window.currentResourceType === 'nurse' && ['all', '<%= @appointment.nurse_id %>'].includes(window.currentResourceId)) || (window.currentResourceType === 'patient' && ['all', '<%= @appointment.patient_id %>'].includes(window.currentResourceId)) 

    if (window.fullCalendar) {
      let eventToRemove = window.fullCalendar.getEventById('<%= "appointment_#{@appointment.id}" %>')
      eventToRemove.remove()

      if (renderEvent) {
        window.fullCalendar.addEvent($.parseJSON("<%= j render(partial: 'appointments/appointment.json', locals: {appointment: @appointment}).html_safe %>"))
      }
    }

    <% if @appointment.cancelled? && @appointment.saved_change_to_cancelled && @corporation.detailed_cancellation_options %>
      $('#remote_container').html('<%= j render "appointments/cancellation_options" %>');
      $('#cancellation_options').modal('show');
      reloadWhenDismissedInPayable()
    <% end %>

    <% if @activity.parameters["patient_id"].present? %>
      if (window.fullCalendar) {
        if (window.currentResourceType === 'patient' && window.currentResourceId === 'all') {
          window.fullCalendar.refetchResources()
        }
      }
    <% end %>

  }

<% end %> 